spring:
  datasource:
    url: jdbc:mysql://${DB_URL}?serverTimezone=Asia/Seoul&characterEncoding=UTF-8
    username: ${USERNAME}
    password: ${PASSWORD}

  data:
    redis:
      host: ${REDIS_URL}
      port: ${REDIS_PORT:6379}
      timeout: 2s
      password: ${REDIS_PASSWORD}

  jpa:
    hibernate:
      ddl-auto: validate
    show-sql: true

  kafka:
    bootstrap-servers: ${KAFKA_SERVERS:dev-kafka:9092}
    producer:
      acks: all  # 모든 replica가 메시지를 받았을 때만 성공으로 처리
      retries: 3   # 전송 실패시 재시도 횟수
      batch-size: 8192   # 한 번에 보낼 메시지들을 모아두는 배치 크기
      properties:
        max.in.flight.requests.per.connection: 1   # 순서 보장
        enable.idempotence: true   # 중복 방지
        linger.ms: 5   # 배치가 가득 안 차도 5ms 후에는 전송
    consumer:
      group-id: nemo-group-dev
      auto-offset-reset: earliest  # 개발시 최신 메시지만

management:
  tracing:
    sampling:
      probability: 0.1
  otlp:
    metrics:
      export:
        enabled: true
    tracing:
      endpoint: http://35.216.67.116:4318
      export:
        enabled: true
  endpoints:
    web:
      exposure:
        include: health, info, metrics
  endpoint:
    health:
      show-details: when-authorized

logging:
  level:
    org.hibernate.SQL: DEBUG
    org.hibernate.type.descriptor.sql.BasicBinder: TRACE
    com.nemo: DEBUG
  file:
    name: logs/nemo-dev.log
  logback:
    rolling policy:
      max-file-size: 100MB
      max-history: 7

sentry:
  dsn: ${SENTRY_DSN}
  environment: development
  release: ${SENTRY_RELEASE:dev}
  traces-sample-rate: 0.1
  send-default-pii: false
  enable-tracing: true
  enabled: true
