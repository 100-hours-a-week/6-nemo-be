name: CI - Build & Upload to GCS (DEV)

on:
  push:
    branches: [develop, ci-cd/setup-dev-pipeline]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      # 1. 자바 환경 세팅
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'

      # 2. gradlew 실행 권한 부여
      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew

      # 3. 빌드 (테스트 생략)
      - name: Build without tests # pr-ci에서 테스트하므로 생략
        run: ./gradlew clean bootJar -x test

      # 4. 업로드할 파일명 생성 (timestamp)
      - name: Generate datetime tag
        id: date
        run: echo "TAG=$(date +'%Y%m%d-%H%M')" >> $GITHUB_OUTPUT

      # 5. GCP 인증
      - name: Authenticate to GCP
        uses: google-github-actions/auth@v1
        with:
            credentials_json: ${{ secrets.GCP_SA_KEY }}

      # 6. Jar 파일명 추출
      - name: Get JAR file name
        id: jar
        run: echo "JAR_NAME=$(ls build/libs/*SNAPSHOT.jar | head -n1)" >> $GITHUB_OUTPUT

      # 7. GCS - timestamp JAR 업로드
      - name: Upload versioned JAR to GCS
        uses: google-github-actions/upload-cloud-storage@v1
        with:
          path: ${{ steps.jar.outputs.JAR_NAME }}
          destination: gs://6-nemo-bucket/v1/backend-deploy/dev/${{ steps.date.outputs.TAG }}.jar

      # 8. GCS - previous -> latest 백업
      - name: Copy latest to previous, then upload new latest
        run: |
          gsutil cp gs://6-nemo-bucket/v1/backend-deploy/dev/latest.jar \
                gs://6-nemo-bucket/v1/backend-deploy/dev/previous.jar || true
          gsutil cp ${{ steps.jar.outputs.JAR_NAME }} \
                gs://6-nemo-bucket/v1/backend-deploy/dev/latest.jar

      # 9. GCS - 배포 스크립트 업로드
      - name: Upload deploy scripts to GCS
        uses: google-github-actions/upload-cloud-storage@v1
        with:
          path: deploy/
          destination: gs://6-nemo-bucket/v1/backend-deploy/dev/